@model List<FitVerse.Core.ViewModels.Coach.CoachWithPackagesVM>
@{
    ViewData["Title"] = "Coaches Management";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container-fluid py-4">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header pb-0">
                    <div class="d-lg-flex">
                        <div>
                            <h5 class="mb-0">All Coaches</h5>
                            <p class="text-sm mb-0">
                                Manage and view all coaches in the system
                            </p>
                        </div>
                        <div class="ms-auto my-auto mt-lg-0 mt-4">
                            <div class="ms-auto my-auto">
                                <button class="btn bg-gradient-primary btn-sm mb-0" type="button" data-bs-toggle="modal" data-bs-target="#addCoachModal">
                                    <i class="fas fa-plus"></i>&nbsp;&nbsp;Add New Coach
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-body px-0 pb-0">
                    <!-- Search and Filter Section -->
                    <div class="row px-4 mb-3">
                        <div class="col-md-6">
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-search"></i></span>
                                <input type="text" class="form-control" id="searchInput" placeholder="Search coaches...">
                            </div>
                        </div>
                        <div class="col-md-6">
                            <select class="form-select" id="experienceFilter">
                                <option value="">All Experience Levels</option>
                                <option value="0-2">0-2 Years</option>
                                <option value="3-5">3-5 Years</option>
                                <option value="6-10">6-10 Years</option>
                                <option value="10+">10+ Years</option>
                            </select>
                        </div>
                    </div>

                    <!-- Coaches Table -->
                    <div class="table-responsive">
                        <table class="table table-flush" id="coachesTable">
                            <thead class="thead-light">
                                <tr>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Coach</th>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">Experience</th>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">Packages</th>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">Status</th>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">Actions</th>
                                </tr>
                            </thead>
                            <tbody id="coachesTableBody">
                                @foreach (var coach in Model)
                                {
                                    <tr>
                                        <td>
                                            <div class="d-flex px-2">
                                                <div class="my-auto">
                                                    <img src="https://ui-avatars.com/api/?name=@coach.Name&background=6366f1&color=fff" class="avatar avatar-sm rounded-circle me-2" alt="Coach Image">
                                                </div>
                                                <div class="d-flex flex-column justify-content-center">
                                                    <h6 class="mb-0 text-sm">@coach.Name</h6>
                                                    <p class="text-xs text-secondary mb-0">ID: @coach.Id</p>
                                                </div>
                                            </div>
                                        </td>
                                        <td>
                                            <p class="text-sm font-weight-bold mb-0">@coach.ExperienceYears Years</p>
                                            <p class="text-xs text-secondary mb-0">
                                                @if (coach.ExperienceYears <= 2)
                                                {
                                                    <span class="badge badge-sm bg-gradient-info">Beginner</span>
                                                }
                                                else if (coach.ExperienceYears <= 5)
                                                {
                                                    <span class="badge badge-sm bg-gradient-warning">Intermediate</span>
                                                }
                                                else if (coach.ExperienceYears <= 10)
                                                {
                                                    <span class="badge badge-sm bg-gradient-success">Advanced</span>
                                                }
                                                else
                                                {
                                                    <span class="badge badge-sm bg-gradient-primary">Expert</span>
                                                }
                                            </p>
                                        </td>
                                        <td>
                                            <div class="d-flex flex-wrap">
                                                @if (coach.Packages != null && coach.Packages.Any())
                                                {
                                                    @foreach (var package in coach.Packages.Take(3))
                                                    {
                                                        <span class="badge badge-sm bg-gradient-secondary me-1 mb-1">@package.Name</span>
                                                    }
                                                    @if (coach.Packages.Count > 3)
                                                    {
                                                        <span class="badge badge-sm bg-gradient-light text-dark">+@(coach.Packages.Count - 3) more</span>
                                                    }
                                                }
                                                else
                                                {
                                                    <span class="text-xs text-secondary">No packages assigned</span>
                                                }
                                            </div>
                                        </td>
                                        <td>
                                            <span class="badge badge-sm bg-gradient-success">Active</span>
                                        </td>
                                        <td class="align-middle">
                                            <div class="dropdown">
                                                <button class="btn btn-link text-secondary mb-0" data-bs-toggle="dropdown" aria-expanded="false">
                                                    <i class="fa fa-ellipsis-v text-xs"></i>
                                                </button>
                                                <ul class="dropdown-menu">
                                                    <li><a class="dropdown-item" href="#" onclick="viewCoach('@coach.Id')">View Details</a></li>
                                                    <li><a class="dropdown-item" href="#" onclick="editCoach('@coach.Id')">Edit</a></li>
                                                    <li><a class="dropdown-item" href="#" onclick="assignPackages('@coach.Id')">Assign Packages</a></li>
                                                    <li><hr class="dropdown-divider"></li>
                                                    <li><a class="dropdown-item text-danger" href="#" onclick="deactivateCoach('@coach.Id')">Deactivate</a></li>
                                                </ul>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    <!-- Pagination -->
                    <div class="d-flex justify-content-between align-items-center px-4 py-3">
                        <div>
                            <p class="text-sm text-secondary mb-0">
                                Showing <span id="showingFrom">1</span> to <span id="showingTo">@Model.Count</span> of <span id="totalItems">@Model.Count</span> coaches
                            </p>
                        </div>
                        <nav aria-label="Coaches pagination">
                            <ul class="pagination pagination-sm mb-0" id="pagination">
                                <!-- Pagination will be generated by JavaScript -->
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Add Coach Modal -->
<div class="modal fade" id="addCoachModal" tabindex="-1" aria-labelledby="addCoachModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addCoachModalLabel">Add New Coach</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addCoachForm">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="coachName">Coach Name</label>
                                <input type="text" class="form-control" id="coachName" name="Name" required>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="experienceYears">Experience Years</label>
                                <input type="number" class="form-control" id="experienceYears" name="ExperienceYears" min="0" required>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="about">About</label>
                        <textarea class="form-control" id="about" name="About" rows="3"></textarea>
                    </div>
                    <div class="form-group">
                        <label for="coachImage">Coach Image</label>
                        <input type="file" class="form-control" id="coachImage" name="CoachImageFile" accept="image/*">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="saveCoach()">Save Coach</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let currentPage = 1;
        let pageSize = 10;
        let currentSearch = '';

        $(document).ready(function () {
            // Search functionality
            $('#searchInput').on('input', function () {
                currentSearch = $(this).val();
                currentPage = 1;
                loadCoaches();
            });

            // Experience filter
            $('#experienceFilter').on('change', function () {
                currentPage = 1;
                loadCoaches();
            });
        });

        function loadCoaches() {
            $.ajax({
                url: '@Url.Action("GetCoachesData", "Admin")',
                type: 'GET',
                data: {
                    page: currentPage,
                    pageSize: pageSize,
                    search: currentSearch
                },
                success: function (response) {
                    if (response.success) {
                        updateCoachesTable(response.data);
                        updatePagination(response.currentPage, response.totalPages, response.totalItems);
                    }
                },
                error: function () {
                    Swal.fire('Error', 'Failed to load coaches data', 'error');
                }
            });
        }

        function updateCoachesTable(coaches) {
            // This would update the table with new data
            // For now, we'll use the server-side rendered data
        }

        function updatePagination(current, total, totalItems) {
            $('#showingFrom').text((current - 1) * pageSize + 1);
            $('#showingTo').text(Math.min(current * pageSize, totalItems));
            $('#totalItems').text(totalItems);

            // Generate pagination HTML
            let paginationHtml = '';
            if (current > 1) {
                paginationHtml += `<li class="page-item"><a class="page-link" href="#" onclick="changePage(${current - 1})">Previous</a></li>`;
            }

            for (let i = Math.max(1, current - 2); i <= Math.min(total, current + 2); i++) {
                paginationHtml += `<li class="page-item ${i === current ? 'active' : ''}"><a class="page-link" href="#" onclick="changePage(${i})">${i}</a></li>`;
            }

            if (current < total) {
                paginationHtml += `<li class="page-item"><a class="page-link" href="#" onclick="changePage(${current + 1})">Next</a></li>`;
            }

            $('#pagination').html(paginationHtml);
        }

        function changePage(page) {
            currentPage = page;
            loadCoaches();
        }

        function viewCoach(coachId) {
            // Implement view coach details
            Swal.fire('Info', 'View coach details functionality to be implemented', 'info');
        }

        function editCoach(coachId) {
            // Implement edit coach functionality
            Swal.fire('Info', 'Edit coach functionality to be implemented', 'info');
        }

        function assignPackages(coachId) {
            // Redirect to assign packages page
            window.location.href = '@Url.Action("CoachPackages", "Admin")';
        }

        function deactivateCoach(coachId) {
            Swal.fire({
                title: 'Are you sure?',
                text: 'Do you want to deactivate this coach?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, deactivate!'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Implement deactivate functionality
                    Swal.fire('Success', 'Coach deactivated successfully', 'success');
                }
            });
        }

        function saveCoach() {
            // Implement save coach functionality
            const formData = new FormData($('#addCoachForm')[0]);
            
            // For now, just show success message
            Swal.fire('Success', 'Coach added successfully', 'success').then(() => {
                $('#addCoachModal').modal('hide');
                location.reload();
            });
        }
    </script>
}
